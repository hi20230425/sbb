
1. AWS EC2 에 Ubuntu Linx 인스턴스(VM)  생성

2. Spring Boot 에서 배포 파일 생성 : jar 
    - JAR : 내장 톰캣으로 배포 , 타임리프 
    - WAR : 외장 톰캣을 사용, JSP
    
    bootJar
    ${workspace_loc:/sbb}
    
     C:\workspace-STS4\sbb\build\libs\sbb-0.0.1-SNAPSHOT.jar

	sbb-0.0.1-SNAPSHOT.jar   <=== 배포 파일 : java -jar sbb-0.0.1-SNAPSHOT.jar

3. VM 에 접속후 기본 셋팅 
   - 컴퓨터이름 변경
   		ubuntu@ip-172-31-10-112:~$
   		< 계정명@서버명:현재작업폴더$ > 
   		sudo vi /etc/hostname 
   		srv1 
   		
   		sudo hostnamectl set-hostname WEB
   		sudo reboot 
   		 		 
   - 시스템의 시간대 변경 : 서울 시간대로 설정 
	  date     : 현재 시스템의 시간을 출력하는 명령어 
	  서울 시간대로 변경 
	  sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime

4. VM에 JDK 17 버젼 설치 : jar 파일의 압축을 풀 수 있다. 
   java 
   sudo apt update   
   sudo apt install openjdk-17-jre-headless
   java -version 


5. sbb-0.0.1-SNAPSHOT.jar을 서버에 전송 
   - 업로드할 폴더 생성 
   cd ~
   mkdir sbb 		<== 현재 로그온한 계정이 쓰기 권한이 있는지 확인 
   ls -la
   
   cd sbb
   java -jar sbb-0.0.1-SNAPSHOT.jar						<== 9696 포트에서 작동됨 

6. AWS 방화벽에서 서비스되는 포트를 오픈 
   TCP  9696 포트 오픈
   TCP  80  포트 오픈 

7. 작동 중인 서비스 확인 
	ps -ef | grep java | grep sbb
	
	UID : 계정에게 부여되는 고유번호   
	PID : 프로세스에게 부여되는 고유 번호
	GID : 그룹에게 부여되는 고유 번호 
	
	프로세스 강제 종료 (실행중인 서비스 강제 종료) 
	sudo kill -9 PID 
	
8. 9696 포트서비스 jar 파일을 80 번 포트에 매핑 : 
	주의 : 80 번 포트로 서비스 시작 할때는 : sudo  명령어로 작동 되어야함. 
	
	sudo java -Dserver.port=80 -jar sbb-0.0.1-SNAPSHOT.jar
	sudo java -jar sbb-0.0.2-SNAPSHOT.jar
	
9. 서비스 작동시 백그라운드 모드로 작동  :  & 
   포그라운드 모드 : sudo java -jar sbb-0.0.2-SNAPSHOT.jar
   백그라운드 모드 : sudo java -jar sbb-0.0.2-SNAPSHOT.jar &
   
10. 서비스 시작 스크립트 : start.sh
===============================
#!/bin/bash 

JAR=sbb/sbb-0.0.1-SNAPSHOT.jar
LOG=/home/ubuntu/sbb/sbb.log

nohup sudo java -jar $JAR > $LOG 2>&1 &
===============================
실행 권한을 부여 : sudo chmod +x start.sh 

11. 서비스 종료 스크립트 : stop.sh
==================================
#!/bin/bash

SBB_PID=$(ps -ef | grep java | grep sbb | awk '{print $2}')

if [ -z "$SBB_PID" ]; 
then 
	echo "SBB is not running"
else 
	sudo kill -9 $SBB_PID
	echo "SBB stopped. "
fi 
==================================
실행 권한을 부여 : sudo chmod +x start.sh 
 
====================================================================================
 3Tier : 
  - 한 시스템에 : Web Server, WAS, DB : 확장이 어렵다. 
  - 3Tier 로 구성한 시스템 : 확장이 쉽다. 
  
 Web Server(Nginx)   ===>  WAS(Tomcat)     ==>  DB (Oracle)
 
AWS VM 2개 생성 

   - WEB : Web Server (TCP 80) , WAS (Tomcat) (TCP 9696)
   		 13.124.57.114
   		- 호스트이름변경 : sudo hostnamectl set-hostname WEB
   		- 시간대 설정   : sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
   		- 방화벽 오픈 : TCP 80 , TCP 9696
   		- JDK 17버젼 설치 , jar 파일 압축을 풀어서 실행 
   			    java 
   				sudo apt update   
   				sudo apt install openjdk-17-jre-headless
   				java -version 
   		- Local Spring Boot 배포 파일을 서버로 전송 
   		
   		
   - DB  : Oracle , 도커 레지스트리에서 Oracle 이미지 다운 (TCP 1521) 
   		15.164.244.233
      	- 호스트이름변경 : sudo hostnamectl set-hostname DB
   		- 시간대 설정   : sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
   		- 방화벽 오픈(AWS)   : TCP 1521 
   		- 방화벽 오픈(VM)    : sudo ufw disable 		<== 우분투 방화벽 비활성화
							sudo reboot 		 
   		- 도커 설치 : 도커 레지스트리에서 Oracle 21 버젼의 도커 이미지 다운 
   
========================================================================================
도커 설치 : https://www.docker.com/
		  https://docs.docker.com/	: 공식 문서 사이트 
		  https://hub.docker.com/	: 도커 허브, 도커 이미지 저장소 ( Registry ) 
		  
   - 리눅스(Host)  : 운영 환경 
   		- Ubuntu , CentOS ==>  		
   - 윈도우 , MAC : 테스트 환경, 개발 

  
 Docker Host : Dokcer Daemon , Registry 에 도커 이미지를 다운 받아서 실행해서 메모리에 올림(도커 컨테이너 ) , 
 
 //도커 설치 
 
 • // 기존의 도커 설치된 경우 도커 제거
	$ sudo apt-get remove docker docker-engine docker.io containerd runc


• // 레파지토리 업데이트 , 요구 프로그램 설치
$ sudo apt-get update


$ sudo apt-get install \
  ca-certificates \
  curl \
  gnupg \
  lsb-release
  
  
• // 도커 GPG 키 설치
$ sudo mkdir -p /etc/apt/keyrings
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg


• // 레포지토리 URL 등록
$ echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null


• //도커 엔진 설치
$ sudo apt-get update
$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

• // 도커 설치 확인
$ docker version



• // 계정 설정

$ sudo usermod -aG docker ubuntu			//vi /etc/group 
	//ubuntu 계정을 docker 그룹에 포함  
	//현재 로그온한 계정이 docker 그룹에 포함되어 있어야 docker의 기능을 사용할 수 있는 권한을 가진다. 

 $ docker 
 
 // oracle-xe 최신 버젼 이미지를 도커허브(Registry) 에서 다운 받아서 컨테이너로 실행  
//접속 오류 :  $ docker run -d -p 1521:1521 -e ORACLE_PASSWORD=1234 gvenzl/oracle-xe
 
 $ docker run -d -p 3306:3306 --name db-mysql -e MYSQL_ROOT_PASSWORD=1234 mysql
 
 
 	docker run : 도커이미지를 다운 받아서 실행 (컨테이너) 
 				docker pull (이미지 다운로드) + docker build (이미지를 컨테이너화 )
 				
		       -d   : 백그라운드로 실행
		       -p 1521:1521   :   1521(Host):1521(Container) 
			   -e ORACLE_PASSWORD=1234   : system 계정의 패스워드 
			   gvenzl/oracle-xe   :   도커허브계정/이미지명:버젼
			  
// 도커 컨테이너 정보 보기 
$ docker ps 

// 도커의 이미지 보기 
$ docker images

// 도커 컨테이너와 도커이미지를 모두 한꺼번에 제거 : 로컬에있는 모든 도커 컨테이너, 모든 도커 이미지 
docker rm -f $(docker ps -a -q) && docker rmi -f $(docker images -q) 

// MySQL 도커 이미지 
 $ docker run -d -p 3306:3306 --name db-mysql -e MYSQL_ROOT_PASSWORD=1234 mysql

// WEB VM에 jar 배포 

	java -Dspring.profiles.active=prod -jar sbb-0.0.3-SNAPSHOT.jar
		application.properties 			: 개발 환경 
		application-prod.properties 	: 운영 환경 

		
서비스 시작 스크립트 : start_prod.sh
   $ cd ~
   $ vi start_prod.sh 
===========================================
#!/bin/bash 

JAR=sbb/sbb-0.0.3-SNAPSHOT.jar
LOG=/home/ubuntu/sbb/sbb.log
export spring_profiles_active=prod

nohup sudo java -jar $JAR > $LOG 2>&1 &
===========================================
실행 권한을 부여 : sudo chmod +x start_prod.sh 

스크립트 실행 :  ./start_prod.sh	
	
서비스 종료 스크립트 : stop.sh
===========================================
#!/bin/bash

SBB_PID=$(ps -ef | grep java | grep sbb | awk '{print $2}')

if [ -z "$SBB_PID" ]; 
then 
	echo "SBB is not running"
else 
	sudo kill -9 $SBB_PID
	echo "SBB stopped. "
fi 
===========================================
실행 권한을 부여 : sudo chmod +x start.sh 











   
   
